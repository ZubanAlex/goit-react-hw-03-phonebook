{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","components/App/App.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","target","value","setState","handleSubmit","evt","preventDefault","includeContacts","props","contacts","find","contact","createNewContact","id","uuidv4","alert","addContact","this","className","styles","form","onSubmit","input","type","placeholder","onChange","pattern","Component","ContactListItem","onDeleteContact","button","onClick","ContactList","length","contactList","map","key","item","Filter","onChangeFilter","laibel","App","filter","changeFilter","e","filterContacts","toLowerCase","includes","deletContact","persistContacts","localStorage","getItem","JSON","parse","prevState","setItem","stringify","filteredContact","container","title","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4241c8df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2FgWO\",\"input\":\"ContactForm_input__2JFVU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactListItem_button__3iIED\",\"name\":\"ContactListItem_name__2HqBV\",\"number\":\"ContactListItem_number__1QnGx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__5q-ap\",\"title\":\"App_title__235Fw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1wuE2\",\"item\":\"ContactList_item__2Gi47\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3psnJ\",\"laibel\":\"Filter_laibel__3ap-A\"};","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport T from \"prop-types\";\r\n\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    const name = evt.target.name.value;\r\n    const number = evt.target.number.value;\r\n    const contacts = this.props.contacts;\r\n\r\n    const includeContacts = contacts.find(\r\n      contact => contact.name === this.state.name\r\n    );\r\n\r\n    const createNewContact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number\r\n    };\r\n    if (name === \"\" || number === \"\") {\r\n      return;\r\n    }\r\n    if (includeContacts) {\r\n      alert(`contact with name ${this.state.name} is allready exist`);\r\n    } else {\r\n      this.props.addContact(createNewContact);\r\n      this.setState({ name: \"\", number: \"\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div>\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Name\r\n            <input\r\n              className={styles.input}\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              className={styles.input}\r\n              type=\"tel\"\r\n              placeholder=\"Enter number in format 123-45-67\"\r\n              name=\"number\"\r\n              pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  contacts: T.array.isRequired,\r\n  addContact: T.func.isRequired\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport T from \"prop-types\";\r\n\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ name, number, onDeleteContact }) => {\r\n  return (\r\n    <>\r\n      <span className={styles.name}>{name}:</span>\r\n      <span className={styles.number}>{number}</span>\r\n      <button className={styles.button} type=\"button\" onClick={onDeleteContact}>\r\n        Delet contact\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: T.string.isRequired,\r\n  number: T.string.isRequired,\r\n  onDeleteContact: T.func.isRequired\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport T from \"prop-types\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) =>\r\n  contacts.length > 0 && (\r\n    <ul className={styles.contactList}>\r\n      {contacts.map(contact => {\r\n        return (\r\n          <li key={contact.id} className={styles.item}>\r\n            <ContactListItem\r\n              {...contact}\r\n              onDeleteContact={() => onDeleteContact(contact.id)}\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n\r\nContactList.propTypes = {\r\n  contacts: T.array.isRequired,\r\n  onDeleteContact: T.func.isRequired\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport T from \"prop-types\";\r\n\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <>\r\n      <p className={styles.laibel}>Find contact by name</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        className={styles.input}\r\n        onChange={onChangeFilter}\r\n        placeholder=\"Search Contact\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: T.string.isRequired,\r\n  onChangeFilter: T.func.isRequired\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\n\n// import T from \"prop-types\";\n\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\n\nimport styles from \"./App.module.css\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\"\n  };\n\n  componentDidMount() {\n    const persistContacts = localStorage.getItem(\"contacts\");\n\n    if (persistContacts) {\n      this.setState({ contacts: JSON.parse(persistContacts) });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  filterContacts = (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  addContact = contact => {\n    this.setState(state => ({\n      contacts: [...state.contacts, contact]\n    }));\n  };\n\n  deletContact = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id)\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContact = this.filterContacts(contacts, filter);\n\n    return (\n      <div className={styles.container}>\n        <h1 className={styles.title}>Phonebook</h1>\n        <ContactForm contacts={contacts} addContact={this.addContact} />\n\n        <h2 className={styles.title}>Contacts</h2>\n\n        {contacts.length > 0 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        <ContactList\n          contacts={filteredContact}\n          onDeleteContact={this.deletContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}